service: pare
app: pare
org: jobfindingapp778

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs18.x
  timeout: 20
  httpApi:
    cors: true
  websocketsApiName: job-app-websockets-api
  websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body
  environment:
    # keeperImageUploadBucket: ${self:custom.keeperImageUploadBucket}
    region: 'us-east-1'
  iamRoleStatements:
    # Allow sending emails with SES
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
        - 'ses:SendRawEmail'
        - 'ses:SendTemplatedEmail'
      Resource: '*'

    # Allow interaction with SQS queues
    - Effect: 'Allow'
      Action:
        - 'sqs:SendMessage'
        - 'sqs:ReceiveMessage'
        - 'sqs:DeleteMessage'
        - 'sqs:GetQueueUrl'
      Resource: 'arn:aws:sqs:us-east-1:*:*'

    # Allow S3 operations (limit to required actions if possible)
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
        - 's3:GetObject'
        - 's3:DeleteObject'
        - 's3:ListBucket'
      Resource: 'arn:aws:s3:::*' # Ideally specify the exact bucket ARN(s)

package:
  individually: true
  exclude:
    - ../../** # Exclude everything outside the keeper-api folder
    - '!./**' # Include only files from the current folder

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-prune-plugin
  - serverless-webpack

custom:
  webpack:
    webpackConfig: './webpack.config.ts' # Specify the Webpack config file
    includeModules: true # Automatically include required `node_modules`
    packager: npm # Set package manager (npm or yarn)
    packagerOptions:
      scripts:
        - 'npm rebuild' # Ensure any native dependencies are properly rebuilt

  prune:
    automatic: true
    number: 3

functions:
  findCompany:
    handler: functions/companies/findCompany.handler
    events:
      - http:
          path: findCompany
          method: post
          cors: true

  updateCompany:
    handler: functions/companies/updateCompany.handler
    events:
      - http:
          path: updateCompany
          method: post
          cors: true

  imageUpload:
    handler: functions/misc/imageUpload.handler
    events:
      - http:
          path: imageUpload
          method: post
          cors: true

  getGoogleMapsLocations:
    handler: functions/misc/getGoogleMapsLocations.handler
    events:
      - http:
          path: getGoogleMapsLocations
          method: post
          cors: true

  sendPubnubNotification:
    handler: functions/misc/sendPubnubNotification.handler
    events:
      - http:
          path: sendPubnubNotification
          method: post
          cors: true

  preSignUp:
    handler: functions/users/preSignUp.handler
    events:
      - http:
          path: preSignUp
          method: post
          cors: true

  addCognitoUserToMongoDb:
    handler: functions/users/addCognitoUserToMongoDb.handler
    events:
      - http:
          path: addCognitoUserToMongoDb
          method: post
          cors: true

  recordSwipe:
    handler: functions/users/recordSwipe.handler
    events:
      - http:
          path: recordSwipe
          method: post
          cors: true

  updateExpoPushToken:
    handler: functions/users/updateExpoPushToken.handler
    events:
      - http:
          path: updateExpoPushToken
          method: post
          cors: true

  addEmployer:
    handler: functions/users/addEmployer.handler
    events:
      - http:
          path: addEmployer
          method: post
          cors: true

  getEmployee:
    handler: functions/users/getEmployee.handler
    events:
      - http:
          path: getEmployee
          method: post
          cors: true

  setEmployeeFieldOnAllDocuments:
    handler: functions/users/setEmployeeFieldOnAllDocuments.handler
    events:
      - http:
          path: setEmployeeFieldOnAllDocuments
          method: post
          cors: true

  getEmployeesForSwiping:
    handler: functions/users/getEmployeesForSwiping.handler
    events:
      - http:
          path: getEmployeesForSwiping
          method: post
          cors: true

  getEmployer:
    handler: functions/users/getEmployer.handler
    events:
      - http:
          path: getEmployer
          method: post
          cors: true

  getEmployerData:
    handler: functions/users/getEmployerData.handler
    events:
      - http:
          path: getEmployerData
          method: post
          cors: true

  getEmployeeData:
    handler: functions/users/getEmployeeData.handler
    timeout: 30
    events:
      - http:
          path: getEmployeeData
          method: post
          cors: true

  addMatch:
    handler: functions/users/addMatch.handler
    events:
      - http:
          path: addMatch
          method: post
          cors: true

  updateMatchForBothOwners:
    handler: functions/users/updateMatchForBothOwners.handler
    events:
      - http:
          path: updateMatchForBothOwners
          method: post
          cors: true

  updateOwnMatch:
    handler: functions/users/updateOwnMatch.handler
    events:
      - http:
          path: updateOwnMatch
          method: post
          cors: true

  deleteMatch:
    handler: functions/users/deleteMatch.handler
    events:
      - http:
          path: deleteMatch
          method: post
          cors: true

  updateUserSettings:
    handler: functions/users/updateUserSettings.handler
    events:
      - http:
          path: updateUserSettings
          method: post
          cors: true

  updateMatchNotification:
    handler: functions/users/updateMatchNotification.handler
    events:
      - http:
          path: updateMatchNotification
          method: post
          cors: true

  updateUserData:
    handler: functions/users/updateUserData.handler
    events:
      - http:
          path: updateUserData
          method: post
          cors: true

  getUsersByArrayOfIds:
    handler: functions/users/getUsersByArrayOfIds.handler
    events:
      - http:
          path: getUsersByArrayOfIds
          method: post
          cors: true

  updateEmployeePreferences:
    handler: functions/users/updateEmployeePreferences.handler
    events:
      - http:
          path: updateEmployeePreferences
          method: post
          cors: true

  getJobsForSwiping:
    handler: functions/jobs/getJobsForSwiping.handler
    events:
      - http:
          path: getJobsForSwiping
          method: post
          cors: true

  addJob:
    handler: functions/jobs/addJob.handler
    events:
      - http:
          path: addJob
          method: post
          cors: true

  deleteJob:
    handler: functions/jobs/deleteJob.handler
    events:
      - http:
          path: deleteJob
          method: post
          cors: true

  findJob:
    handler: functions/jobs/findJob.handler
    events:
      - http:
          path: findJob
          method: post
          cors: true

  updateJob:
    handler: functions/jobs/updateJob.handler
    events:
      - http:
          path: updateJob
          method: post
          cors: true
